{"componentChunkName":"component---src-templates-docs-js","path":"/Language-Features/19-Lazy-Value","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"00ea8d08-d97a-52f9-ae76-aef757c3e852","title":"Lazy Value","slug":"/Language-Features/19-Lazy-Value"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lazy Value\",\n  \"metaTitle\": \"Lazy Value\",\n  \"metaDescription\": \"Data type for deferred computation in ReScript\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/manual/latest/lazy-values\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12\\uC740 \\uB098\\uC911\\uC5D0 \\uACC4\\uC0B0\\uD558\\uB294 \\uAC83\\uC744 \\uD45C\\uD604\\uD569\\uB2C8\\uB2E4. \\uC774\\uB294 \\uC790\\uB3D9\\uC73C\\uB85C \\uCCAB\\uBC88\\uC9F8 \\uC2E4\\uD589 \\uACB0\\uACFC\\uB97C \\uAE30\\uC5B5\\uD574\\uC90D\\uB2C8\\uB2E4. \\uADF8\\uB9AC\\uACE0 \\uC5B4\\uB5A4 \\uBC18\\uBCF5\\uB41C \\uC2E4\\uD589\\uC758 \\uACB0\\uACFC\\uB97C \\uAE30\\uC5B5\\uD55C \\uAC12\\uC744 \\uB9AC\\uD134\\uD569\\uB2C8\\uB2E4.\\n\\uD56D\\uC0C1 \\uAC19\\uC740 \\uAC12\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uBCF5\\uC7A1\\uD55C \\uD568\\uC218\\uC640 \\uC2DD\\uC744 \\uC815\\uC758\\uD558\\uB294 \\uB370\\uC5D0 \\uC720\\uC6A9\\uD569\\uB2C8\\uB2E4. \\uC608\\uB97C \\uB4E4\\uBA74 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC19\\uC740 \\uD2B8\\uB9AC\\uB97C \\uBC18\\uBCF5\\uD558\\uC5EC \\uD0D0\\uC0C9\\uD558\\uB294 \\uBE44\\uC2FC DOM \\uBC29\\uC2DD\\uC744 \\uC218\\uD589\\uD569\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC14\\uB00C\\uC9C0 \\uC54A\\uC744 \\uD30C\\uC774\\uB9AC\\uB4E4\\uC758 \\uC815\\uC801 \\uC9D1\\uD569\\uC5D0 \\uB530\\uB978 \\uD30C\\uC77C \\uC2DC\\uC2A4\\uD15C \\uC5F0\\uC0B0\\uC744 \\uC218\\uD589\\uD569\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC19\\uC740 \\uB370\\uC774\\uD130\\uB97C \\uD56D\\uC0C1 \\uB9AC\\uD134\\uD558\\uB294 API \\uC11C\\uBC84\\uC5D0 \\uBD80\\uD558\\uAC00 \\uB9CE\\uC740 \\uC694\\uCCAD\\uC744 \\uD569\\uB2C8\\uB2E4.\")), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12\\uC740 Lazy.t('a)\\uC758 \\uD0C0\\uC785\\uC744 \\uAC00\\uC9C0\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. 'a\\uB294 \\uACC4\\uC0B0\\uB41C \\uACB0\\uACFC\\uAC12\\uC744 \\uB9AC\\uD134\\uD55C \\uAC12\\uC758 \\uD0C0\\uC785\\uC785\\uB2C8\\uB2E4. Lazy \\uBAA8\\uB4C8\\uC740 \\uC804\\uC5ED\\uC801\\uC73C\\uB85C \\uC4F8 \\uC218 \\uC788\\uC73C\\uBA70, Lazy \\uAE30\\uB2A5\\uB4E4\\uC740 \\uC774 \\uBAA8\\uB4C8\\uC5D0 \\uCEA1\\uC290\\uD654\\uB418\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12 \\uB9CC\\uB4E4\\uAE30\"), mdx(\"p\", null, \"\\uB9AC\\uC2A4\\uD06C\\uB9BD\\uD2B8\\uC5D0\\uC11C\\uB294 \\uC9C0\\uC5F0\\uB41C \\uAC12\\uC744 \\uB9CC\\uB4DC\\uB294 \\uBB38\\uBC95\\uC744 \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4. Lazy \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD574 \\uD45C\\uD604\\uC2DD\\uC73C\\uB85C\\uBD80\\uD130 \\uC9C0\\uC5F0\\uB41C \\uAC12\\uC744 \\uB9CC\\uB4E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"/* \\uC6B0\\uB9AC\\uAC00 \\uC6D0\\uD558\\uB294 \\uAC83\\uC740 getFile \\uD568\\uC218\\uAC00 \\uD30C\\uC77C\\uC744 \\uC77D\\uAE30 \\uC704\\uD574 \\uB531 1\\uBC88\\uB9CC \\uB3D9\\uC791\\uD558\\uB294 \\uAC83\\uC785\\uB2C8\\uB2E4. */\\n/* lazy value \\uB85C \\uB9CC\\uB4E4\\uAE30\\uC704\\uD574 \\uD55C \\uBC88 \\uAC10\\uC2F8\\uBCF4\\uACA0\\uC2B5\\uB2C8\\uB2E4. */\\nlet getFiles =\\n  lazy({\\n    Js.log(\\\"Reading dir\\\")\\n    Node.Fs.readdirSync(\\\"./pages\\\")\\n  })\\n\\n/* \\uCCAB\\uBC88\\uC9F8 \\uD638\\uCD9C\\uC5D0\\uC11C, \\uACC4\\uC0B0\\uC744 \\uC218\\uD589\\uD569\\uB2C8\\uB2E4. */\\nLazy.force(getFiles)->Js.log\\n\\n/* \\uB450\\uBC88\\uCA30 \\uD638\\uCD9C\\uC5D0\\uC11C \\uBBF8\\uB9AC \\uACC4\\uC0B0\\uB41C \\uD30C\\uC77C\\uB4E4\\uC744 \\uBC18\\uD658\\uD569\\uB2C8\\uB2E4. */\\nLazy.force(getFiles)->Js.log\\n\")), mdx(\"p\", null, \"\\uB610\\uB294 \\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uD568\\uC218\\uB97C lazy\\uB85C \\uB798\\uD551\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"/* \\uD30C\\uB77C\\uBBF8\\uD130 \\uC5C6\\uB294 \\uD568\\uC218\\uB97C \\uB798\\uD551\\uD558\\uB294 \\uC608\\uC81C\\uC785\\uB2C8\\uB2E4. */\\nlet getFiles = () => {\\n  Node.Fs.readdirSync(\\\"./pages\\\")\\n}\\n\\n/* \\uC9C0\\uC5F0\\uB41C \\uAC12\\uC5D0\\uC11C \\uD568\\uC218\\uB97C \\uB798\\uD551\\uD569\\uB2C8\\uB2E4. */\\nlet lazyGetFiles = Lazy.from_fun(getFiles)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"/* \\uD30C\\uB77C\\uBBF8\\uD130\\uB4E4\\uC774 \\uC788\\uB294 \\uD568\\uC218\\uB97C \\uB798\\uD551\\uD558\\uB294 \\uC608\\uC81C\\uC785\\uB2C8\\uB2E4. */\\nlet doesFileExist = name => {\\n  Node.Fs.readdirSync(\\\"./pages\\\")->Js.Array2.find(s => name === s)\\n}\\n\\n/* Lazy syntax\\uB97C \\uB2E4\\uC2DC \\uC0AC\\uC6A9\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4. */\\n/* \\uC5EC\\uAE30\\uC11C\\uB294 Lazy.from_fun\\uC744 \\uC0AC\\uC6A9\\uD560\\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. */\\n\\nlet lazyDoesFileExist = lazy(doesFileExist(\\\"blog.res\\\"))\\n\")), mdx(\"p\", null, \"unit => a\\uC640 \\uAC19\\uC774 \\uD30C\\uB77C\\uBBF8\\uD130\\uAC00 \\uC5C6\\uB294 \\uD568\\uC218\\uB97C \\uB798\\uD551\\uD560 \\uB54C\\uC5D0\\uB294, Lazy.from_fun\\uC744 \\uC0AC\\uC6A9\\uD558\\uACE0, \\uD30C\\uB77C\\uBBF8\\uD130\\uAC00 1\\uAC1C \\uC774\\uC0C1 \\uC788\\uC744 \\uB54C\\uC5D0\\uB294 lazy(expr) \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uC5F0\\uC0B0\\uC744 \\uAC15\\uC81C\\uD558\\uAE30\"), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12\\uB4E4\\uC740 \\uAC12\\uC744 \\uB9AC\\uD134\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uBA85\\uC2DC\\uC801\\uC73C\\uB85C \\uC2E4\\uD589\\uB418\\uC5B4\\uC57C \\uD560 \\uD544\\uC694\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC5F0\\uC0B0\\uC744 \\uC2DC\\uC791\\uD558\\uAE30 \\uC704\\uD574\\uC11C Lazy.force\\uB97C \\uC0AC\\uC6A9\\uD558\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"let computation = lazy(1)\\n\\n/* Returns 1 */\\nLazy.force(computation)\\n\")), mdx(\"p\", null, \"\\uD328\\uD134 \\uB9E4\\uCE6D\\uC744 \\uC0AC\\uC6A9\\uD574\\uC11C\\uB3C4 \\uC9C0\\uC5F0\\uB41C \\uAC12\\uC744 \\uC5F0\\uC0B0\\uD558\\uAE30\\uB97C \\uAC15\\uC81C\\uD558\\uB294 \\uAC83\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4. switch\\uB97C \\uC0AC\\uC6A9\\uD55C \\uD328\\uD134 \\uB9E4\\uCE6D \\uBB38\\uBC95\\uC5D0\\uC11C lazy\\uB294 \\uAD6C\\uC870 \\uBD84\\uD574\\uC640 \\uC720\\uC0AC\\uD558\\uAC8C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"/* Extract a lazy value via pattern matching */\\nlet computation = lazy(\\\"computed\\\")\\n\\nswitch computation {\\n| lazy(\\\"computed\\\") => Js.log(\\\"ok\\\")\\n| _ => Js.log(\\\"not ok\\\")\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"/* \\uB2E8\\uC77C \\uAC12\\uC744 \\uAD6C\\uC870\\uBD84\\uD574 \\uD569\\uB2C8\\uB2E4 */\\n/* \\uC815\\uBCF4: \\uD604\\uC7AC \\uBC84\\uC804\\uC758 \\uD3EC\\uB9E4\\uD130\\uB97C \\uC0AC\\uC6A9\\uD558\\uAC8C \\uB418\\uBA74 `let lazy word = ...` \\uB85C \\uC7AC\\uCD9C\\uB825 \\uB420\\uAC81\\uB2C8\\uB2E4.*/\\nlet lazy(word) = lazy(\\\"hello\\\")\\n\\n/* Output: \\\"hello\\\" */\\nJs.log(word)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"let lazyValues = (lazy(\\\"Hello\\\"), lazy(\\\"world\\\"))\\nlet (lazy(word1), lazy(word2)) = lazyValues\\n\\nJs.log2(word1, word2)\\nlet lazy(word) = lazy(\\\"Hello\\\")\\n\")), mdx(\"p\", null, \"\\uC704\\uC758 \\uC608\\uC81C\\uC5D0\\uC11C \\uBCFC \\uC218 \\uC788\\uB4EF\\uC774, lazy \\uBB38\\uBC95\\uC740 \\uC9C0\\uC5F0\\uB41C \\uC5F0\\uC0B0\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC81C\\uC5B4\\uD558\\uB294 \\uC369 \\uAD1C\\uCC2E\\uC740 \\uBC29\\uBC95\\uC785\\uB2C8\\uB2E4!\"), mdx(\"p\", null, \"\\uC608\\uC81C \\uD578\\uB4E4\\uB9C1\"), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12\\uC774 \\uC608\\uC678\\uB97C \\uBC1C\\uC0DD\\uD558\\uBA74, Lazy.force\\uC5D0 \\uC758\\uD574 \\uB3D9\\uC77C\\uD55C \\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-reason\"\n  }), \"let readFile =\\n  lazy({\\n    raise(Not_found)\\n  })\\n\\ntry {\\n  Lazy.force(readFile)\\n} catch {\\n  | Not_found => Js.log(\\\"No file\\\")\\n}\\n\")), mdx(\"p\", null, \"\\uB531\\uD788 \\uC0C8\\uB85C\\uC6B8 \\uAC74 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. try \\uAD6C\\uBB38\\uC744 \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC9C0\\uC5F0 \\uC5F0\\uC0B0\\uC5D0\\uC11C \\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\uD558\\uBA74 catch \\uAD6C\\uBB38 \\uC548\\uC5D0\\uC11C \\uCC98\\uB9AC\\uB418\\uACA0\\uC8E0.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uADF8\\uB7EC\\uB098 \\uAE30\\uC5B5\\uD558\\uC138\\uC694: \\uC608\\uC678\\uB294 \\uC790\\uC8FC \\uC4F0\\uC774\\uBA74 \\uC548\\uB418\\uC5B4\\uC694!\"), mdx(\"p\", null, \"\\uC8FC\\uBAA9\\uD574\\uC57C \\uD560 \\uAC83\"), mdx(\"p\", null, \"\\uC9C0\\uC5F0\\uB41C \\uAC12\\uC740 \\uACF5\\uC720\\uB418\\uB294 \\uB370\\uC774\\uD130 \\uD0C0\\uC785\\uC740 \\uC544\\uB2D9\\uB2C8\\uB2E4. \\uBC14\\uB2D0\\uB77C \\uCF54\\uB4DC\\uC758 \\uC2E4\\uD589\\uC2DC\\uAC04\\uC758 \\uD45C\\uD604\\uC5D0 \\uAE30\\uB300\\uD558\\uC9C0 \\uB9D9\\uC2DC\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"Language-Features/19-Lazy-Value.mdx"},"frontmatter":{"metaTitle":"Lazy Value","metaDescription":"Data type for deferred computation in ReScript","sourceUrl":"https://rescript-lang.org/docs/manual/latest/lazy-values"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"Build System"}}},{"node":{"fields":{"slug":"/Extra","title":"Extra"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"JavaScript Interop"}}},{"node":{"fields":{"slug":"/bs.deriving","title":"[@bs.deriving]"}}},{"node":{"fields":{"slug":"/Language-Features","title":"Language Features"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Guides","title":"Guides"}}},{"node":{"fields":{"slug":"/bs.deriving/02-jsConverter","title":"[@bs.deriving jsConverter]"}}},{"node":{"fields":{"slug":"/Overview","title":"Overview"}}},{"node":{"fields":{"slug":"/bs.deriving/01-accessors","title":"[@bs.deriving accessor]"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/bs.deriving/03-abstract","title":"[@bs.deriving abstract]"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let Binding"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"Bind to JS Object"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"Shared Data Types"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"Bind to JS Function"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (Bind to Any JS Library)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"Inlining Constants"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"Build System Overview"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"Configuration"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"Generate Converters & Helpers"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"Configuration Schema"}}},{"node":{"fields":{"slug":"/Build-System/04-Interop-with-JS-Build-Systems","title":"Interop with JS Build Systems"}}},{"node":{"fields":{"slug":"/Build-System/05-Performance","title":"Performance"}}}]}},"pageContext":{"id":"00ea8d08-d97a-52f9-ae76-aef757c3e852"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}