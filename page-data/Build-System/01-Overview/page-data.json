{"componentChunkName":"component---src-templates-docs-js","path":"/Build-System/01-Overview","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"6f00c570-8674-55f1-990c-db24ef8e67ee","title":"Build System Overview","slug":"/Build-System/01-Overview"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Build System Overview\",\n  \"metaTitle\": \"Build System Overview\",\n  \"metaDescription\": \"Documentation about the ReScript build system and its toolchain\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/manual/latest/build-overview\",\n  \"canonical\": \"https://rescript-lang.org/docs/manual/latest/build-overview\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"ReScript comes with a build system, bsb, that's meant to be fast, lean and used as the authoritative build system of the community.\"), mdx(\"p\", null, \"Bsb provides a few templates to quickly start a new project:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"bsb -init my-directory-name\\n\")), mdx(\"p\", null, \"Feel free to inspect the various files in the newly generated directory. To see all the templates available, do:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"bsb -themes\\n\")), mdx(\"p\", null, \"The build description file is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsconfig.json\"), \". Every ReScript project needs one.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"To build a project\"), \", run:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"bsb -make-world\\n\")), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-w\"), \" to keep the built-in watcher running. Any new file change will be picked up and the build will re-run.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": third-party libraries (in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \") aren't watched, as doing so may exceed the node.js watcher count limit. If you're doing quick and dirty modifications inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \", you have to do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsb -clean-world -make-world\"), \" to rebuild them.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note 3\"), \": If you are developing across multiple devices, you may find the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-ws\"), \" configuration useful in order to have live-reloading across the network. Possible configurations are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bsb -make-world -w -ws _\"), \" (default)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bsb -make-world -w -ws 0.0.0.0:9999\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bsb -make-world -w -ws 5000\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"To build only yourself\"), \", use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsb\"), \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsb -help\"), \" to see all the available options.\"), mdx(\"h2\", null, \"Artifacts Cleaning\"), mdx(\"p\", null, \"If you ever get into a stable build for edge-case reasons, use:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"bsb -clean-world\\n\")), mdx(\"p\", null, \"Or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsb -clean\"), \" to clean only your own artifacts.\"), mdx(\"h2\", null, \"Editor Support\"), mdx(\"p\", null, \"Bsb generates a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".merlin\"), \" file, used by various \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"editor-plugins.md\"\n  }), \"editor plugins\"), \" under the hood to power e.g. autocomplete, type hint, diagnosis, etc.\"), mdx(\"h3\", null, \"Tips & Tricks\"), mdx(\"p\", null, \"A typical problem with traditional build systems is that they're not resilient against the user moving/deleting source files. Most don't clean up the old artifacts correctly after such user action\", \"*\", \". Bsb is unfortunately no different, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unless\"), \" you turn on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"suffix\\\": \\\".bs.js\\\"\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bsconfig.json\"), \", in which case we can track which JS artifact belongs to which source file correctly, even against source file moving/deletion.\"), mdx(\"h2\", null, \"Design Decisions\"), mdx(\"p\", null, \"*\", \" One such build system that tracks these correctly & efficiently is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://gittup.org/tup/\"\n  }), \"Tup\"), \". See the (rather accessible!) paper \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://gittup.org/tup/build_system_rules_and_algorithms.pdf\"\n  }), \"here\"), \". Unfortunately, Tup's implementation uses FUSE and other systems, which we can't safely use on every platform.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#artifacts-cleaning","title":"Artifacts Cleaning"},{"url":"#editor-support","title":"Editor Support","items":[{"url":"#tips--tricks","title":"Tips & Tricks"}]},{"url":"#design-decisions","title":"Design Decisions"}]},"parent":{"__typename":"File","relativePath":"Build-System/01-Overview.mdx"},"frontmatter":{"metaTitle":"Build System Overview","metaDescription":"Documentation about the ReScript build system and its toolchain","sourceUrl":"https://rescript-lang.org/docs/manual/latest/build-overview","canonical":"https://rescript-lang.org/docs/manual/latest/build-overview"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"Build System Overview"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"Configuration"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"Configuration Schema"}}},{"node":{"fields":{"slug":"/Build-System/04-Interop-with-JS-Build-Systems","title":"Interop with JS Build Systems"}}},{"node":{"fields":{"slug":"/Build-System/05-Performance","title":"Performance"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"Bind to JS Function"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"Inlining Constants"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"Generate Converters & Helpers"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let Binding"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}}]}},"pageContext":{"id":"6f00c570-8674-55f1-990c-db24ef8e67ee"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}